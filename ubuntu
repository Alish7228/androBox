 #!/bin/bash


thispid=$$
index=1
for var in "$@"
do
        argslist[$index]=$var
        index=$((index+1))
done

help(){

echo -e "Usage: ubuntu [-x|-va|help]"
echo -e "\nOptions: "
echo -e "-x          Start the proot with Termux:X11 connection"
echo -e "-vnc        Start the proot with VNC connection"
echo -e "-va         Start virglrenderer android vtest server"
echo -e "help        Print this help message"
 

}


get_index_if_match(){

for i in $1
do
        position=1
        hasfound=false
        for e in $2
        do
                if [ "$i" == "$e" ]
                then
      			hasfound=true
                        break 2
                fi
        position=$((position+1))
        done
done
if [ "$hasfound" == "true" ];then echo $position;fi

}

update(){

wget https://raw.githubusercontent.com/Pipetto-crypto/3in1ProotX86Emus/master/ubuntu
chmod +x ubuntu
mv ubuntu $PATH

}

update-all(){

proot-distro login ubuntu --shared-tmp --no-sysvipc -- update-bins 
proot-distro login ubuntu --shared-tmp --no-sysvipc -- update
wget https://raw.githubusercontent.com/Pipetto-crypto/3in1ProotX86Emus/master/ubuntu
chmod +x ubuntu
mv ubuntu $PATH

}

coresin=$(get_index_if_match "-cores" "${argslist[*]}")
if [ "$coresin" == "" ];then cores="4-7";else cores=${argslist[$((coresin+1))]};fi
taskset -a -pc $cores $thispid >/dev/null 2>&1


for i in ${argslist[@]}
do
     case "$i" in
     help)
          help
          exit
          ;;
     update)
          update
          exit
          ;;
     update-all)
          update-all
          exit
          ;;
     -x) 
          echo -e "\nStarting the X server"
	  DISPLAY=:0 termux-x11 --no-xwayland-start >/dev/null 2>&1 &
	  sleep 3
	  DISPLAY=:0 Xvfb :0 -ac -screen 0 4096x4096x24 -noreset &
          sleep 3
          echo -e "\nStart Openbox Session Manager"
          proot-distro login ubuntu --shared-tmp --no-sysvipc -- openbox-session >/dev/null 2>&1 &
          ;;
     -va)
          hasgles=$(get_index_if_match "--use-gles" "${argslist[*]}")
          if [ "$hasgles" != "" ]; then VIRGL_ARGS="--use-gles";fi
          MESA_NO_ERROR=1 virgl_test_server_android $VIRGL_ARGS &
          ;;
     -vnc)
          PROOT_HOME=$PREFIX/var/lib/proot-distro/installed-rootfs/ubuntu/root
          echo -e "\nStarting the VNC server"
          read -p "Select the sceeen size: " SCREENSIZE
          sleep 3
          proot-distro login ubuntu --shared-tmp --no-sysvipc -- Xvnc :0 -rfbport 5900 -rfbauth $PROOT_HOME/.vnc/passwd -geometry $SCREENSIZE -noreset >/dev/null 2>&1 &
          proot-distro login ubuntu --shared-tmp --no-sysvipc -- openbox-session >/dev/null 2>&1 & 
          ;;
     -vm)
          MESA_NO_ERROR=1 GALLIUM_DRIVER=zink ZINK_DESCRIPTORS=lazy MESA_GL_VERSION_OVERRIDE=4.0 virgl_test_server --use-egl-surfaceless &
          ;;
      esac
done

echo -e "\nStarting the audio server"

        pulseaudio --start --exit-idle-time=-1
        pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1

echo -e "\nEntering the proot"

proot-distro login ubuntu --bind /sdcard:/sdcard --bind /data/data/com.termux/files/home:/termux-home --bind $TMPDIR:/tmp --isolated --no-sysvipc
pkill openbox
pkill pulseaudio
pkill Xvnc
pkill Xvfb
kill $(pidof app_process) >/dev/null 2>&1
kill $(pidof virgl_test_server_android) >/dev/null 2>&1
kill $(pidof virgl_test_server) >/dev/null 2>&1
