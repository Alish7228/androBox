#!/bin/bash

configfile=/sdcard/3in1ProotX86Emus/proot.conf
if [ ! -f $configfile ]
then
    mkdir -p /sdcard/3in1ProotX86Emus
    wget https://raw.githubusercontent.com/Pipetto-crypto/3in1ProotX86Emus/master/configs/proot.conf -P /sdcard/3in1ProotX86Emus
fi

if [ ! -f $PATH/termux-x11 ]
then
     echo -e "You haven't installed Termux:X11 deb but it is required by this script, leaving..."
     exit
fi


iswinedesktop="$(cat $configfile | awk -F '=' '/winedesktop/{print $2}' | tr -d "\n")" 
if [ "$iswinedesktop" == "yes" ];then winedesktoptype="$(cat $configfile | awk -F '=' '/desktoptype/{print $2}' | tr -d "\n")";fi
gpurenderer="$(cat $configfile | awk -F '=' '/renderer/{print $2}' | tr -d "\n")"
autostartservice="$(cat $configfile | awk -F '=' '/autostart/{print $2}' | tr -d "\n")"
case $gpurenderer in
llvmpipe)
          rendererargs=""
          ;;
zink)
          rendererargs="env GALLIUM_DRIVER=zink MESA_LOADER_DRIVER_OVERRIDE=zink"
          ;;
virgl)
          rendererargs="env GALLIUM_DRIVER=virpipe LIBGL_ALWAYS_SOFTWARE=1"
          virglenabled="true"
          ;;
*)
          echo -e "\nThis is not a valid renderer, change your config file appropriately. Defaulting to llvmpipe"
          rendererargs=""
          ;;
esac

thispid=$$
index=1
for var in "$@"
do
        argslist[$index]=$var
        index=$((index+1))
done

help(){

echo -e "Usage: ubuntu [options] [commands]"
echo -e "\nOptions: "
echo -e "-x             Start the proot with Termux:X11 connection"
echo -e "-vnc           Start the proot with VNC connection"
echo -e "-c             Set core affinity, default to high performance cores"
echo -e "-va            Start virglrenderer android vtest server, can provide --use-gles to start use GL4ES."
echo -e "update         Update this script"
echo -e "update-all     Update this script and all the scripts inside the proot"
echo -e "help           Print this help message"
echo -e "enter          Enter the proot for maintainance and troubleshooting"
echo -e "set-renderer   Set default renderer, default llvmpipe"
echo -e "stop           Kill all running processes"

}


get_index_if_match(){

for i in $1
do
        position=1
        hasfound=false
        for e in $2
        do
                if [ "$i" == "$e" ]
                then
      			hasfound=true
                        break 2
                fi
        position=$((position+1))
        done
done
if [ "$hasfound" == "true" ];then echo $position;fi

}

exit_proot(){

pkill -P $thispid
kill_processes
exit 0

}


kill_processes(){

pkill pulseaudio
pkill Xvnc
kill $(pidof app_process) >/dev/null 2>&1
kill $(pidof virgl_test_server_android) >/dev/null 2>&1

}


xserver(){

echo -e "\nStarting the X server"
DISPLAY=:0 termux-x11 >/dev/null 2>&1 &
sleep 3


}

virgl_server(){

echo -e "\nStarting virgl vtest server"
hasgles=$(get_index_if_match "--use-gles" "${argslist[*]}")
if [ "$hasgles" != "" ]; then VIRGL_ARGS="--use-gles";fi
MESA_NO_ERROR=1 virgl_test_server_android $VIRGL_ARGS &

}

vnc_server(){

PROOT_HOME=$PREFIX/var/lib/proot-distro/installed-rootfs/ubuntu/root
echo -e "\nStarting the VNC server"
read -p "Select the sceeen size: " SCREENSIZE
sleep 3
proot-distro login ubuntu --shared-tmp --no-sysvipc -- Xvnc :0 -rfbport 5900 -rfbauth $PROOT_HOME/.vnc/passwd -geometry $SCREENSIZE -noreset >/dev/null 2>&1 &

}

set_renderer(){

rendererin=coresin=$(get_index_if_match "set-renderer" "${argslist[*]}")
sed -i "4s/=.*/=${argslist[$((rendererin+1))]}/g" $configfile


}

pulse_server(){

echo -e "\nStarting the PulseAudio server"
pulseaudio --start --exit-idle-time=-1
pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1


}

proot_login(){

bindargs=("--bind /sdcard:/sdcard" "--bind /data/data/com.termux/files/home:/termux-home" "--bind /storage/emulated/0" "--bind $TMPDIR:/tmp")
proot_args=("--isolated" "--no-sysvipc")
proot-distro login ubuntu ${bindargs[@]} ${proot_args[@]} -- $@


}


update(){

wget https://raw.githubusercontent.com/Pipetto-crypto/3in1ProotX86Emus/master/ubuntu
chmod +x ubuntu
mv ubuntu $PATH

}

update-all(){

proot-distro login ubuntu --shared-tmp --no-sysvipc -- update-bins 
proot-distro login ubuntu --shared-tmp --no-sysvipc -- update
wget https://raw.githubusercontent.com/Pipetto-crypto/3in1ProotX86Emus/master/ubuntu
chmod +x ubuntu
mv ubuntu $PATH

}

update-proot(){

proot-distro login ubuntu --shared-tmp --no-sysvipc -- apt update
proot-distro login ubuntu --shared-tmp --no-sysvipc -- apt upgrade

}

coresin=$(get_index_if_match "-cores" "${argslist[*]}")
if [ "$coresin" == "" ];then cores="4-7";else cores=${argslist[$((coresin+1))]};fi
taskset -a -pc $cores $thispid >/dev/null 2>&1

app_pid=$(pidof app_process)
virgl_pid=$(pidof virgl_test_server_android)
pulse_pid=$(pidof pulseaudio)
vnc_pid=$(proot_login "pgrep Xvnc")
commindex=1

for i in ${argslist[@]}
do
     case "$i" in
     help)
          help
          exit
          ;;
     update)
          update
          exit
          ;;
     update-all)
          update-all
          exit
          ;;
     update-proot)
          update-proot
          exit
          ;;
     init) 
          xserver
          proot_login wineswitch
          proot_login install_ib
          exit_proot
          ;;
     set-renderer)
          set_renderer
          exit_proot
          ;;
     -x) 
	  if [ "$app_pid" == "" ];then xserver;fi
          ;;
     -va | --use-gles)
          if [ "$virgl_pid" == "" ];then virgl_server;fi
          ;;
     -vnc)
          if [ "$vnc_pid" == "" ];then vnc_server;fi
          ;;
     --with-wm)
          iswm="true"
          ;;
     -vm)
          MESA_NO_ERROR=1 GALLIUM_DRIVER=zink ZINK_DESCRIPTORS=lazy MESA_GL_VERSION_OVERRIDE=4.0 virgl_test_server --use-egl-surfaceless &
          ;;
     stop)
          kill_processes
          exit 0
          ;;
     enter)
          commslist="bash"
          ;;
     *)
          if [ -f "$i" ]
          then
                absfile=$(realpath -e $i)
          else
                if [ "$i" == "wine64" ] || [ "$i" == "winege" ]; then iswine64bit="yes";fi
                commslist[$commindex]=$i
          fi
          commindex=$((commindex+1))
          ;;
      esac
done

#Update the pids after parsing command line options

app_pid=$(pidof app_process)
virgl_pid=$(pidof virgl_test_server_android)
vnc_pid=$(proot_login "pgrep Xvnc")


if [ "$gpurenderer" == "virgl" ] && [ "$virgl_pid" == "" ];then virgl_server;fi
if [ "$autostartservice" == "x11" ] && [ "$app_pid" == "" ];then xserver;fi
if [ "$autostartservice" == "vnc" ] && [ "$vnc_pid" == "" ];then vnc_server;fi

#update the pids after executing the autostart commands

app_pid=$(pidof app_process)
vnc_pid=$(proot_login "pgrep Xvnc")

if [ "$iswm" == "true" ]
then
     #proot-distro login ubuntu --shared-tmp --no-sysvipc -- openbox-session >/dev/null 2>&1 &
fi

if [ "$pulse_pid" == "" ]; then pulse_server;fi

if [ "${commslist[*]}" != "" ]
then
    iswinedesktop="no"
fi

if [ "$iswinedesktop" == "yes" ] && [ "$(pgrep winedesktop)" == "" ]
then 
     if [ "$app_pid" != "" ] || [ "$vnc_pid" != "" ]
     then
          proot_login "winedesktop$winedesktoptype" &
          sleep 5
          if [ "$winedesktoptype" != "" ];then pkill services.exe;fi
          exit
     fi
fi

if [ "$iswine64bit" == "yes" ]
then
     proot_login $rendererargs ${commslist[*]} "$absfile" &
     sleep 5
     pkill services.exe
else
     proot_login $rendererargs ${commslist[*]} "$absfile" 
fi
