#!/bin/bash


if [ "$SUDO_USER" != "" ]
then 
     HOME=/home/$SUDO_USER
     USERNAME=$SUDO_USER
else
     USERNAME=root
fi

cachedir="$HOME/.local/cache"
mkdir -p $cachedir

if [ "$1" == "help" ]
then
     echo -e "Usage: wineswitch version arch"
     echo -e "\nWith no arguments passed it starts interactive mode. Use uni in place of arch to install both x86 and amd64"
     exit
elif [ "$1" != "" ]
then
     VERSION="$1"
else
     read -p "Select a wine version:" VERSION
fi

if [ "$2" != "" ]
then
     ARCH="$2"
else
     read -p "Select an architecture:" ARCH
fi

if [ ! "$(id -u)" = "0" ]
then
     echo -e "\nThis program needs to be ran with sudo"
     exit
fi

if [ "$ARCH" == "uni" ]
then
     ARCH=amd64
     REALARCH=uni
else 
     REALARCH=""
fi

if [ ! -d ~/wine-$VERSION-$ARCH ]
then
     if (( $(echo "$(echo $VERSION) >= 5.5"|bc -l) ))
     then
          if [ ! -f $cachedir/wine-$VERSION-$ARCH.tar.xz ]
          then
               wget https://github.com/Kron4ek/Wine-Builds/releases/download/$VERSION/wine-$VERSION-$ARCH.tar.xz -P $cachedir
          fi
          tar -xf $cachedir/wine-$VERSION-$ARCH.tar.xz -C ~
     else
          if [ ! -f $cachedir/PlayOnLinux-wine-$VERSION-upstream-linux-$ARCH.tar.gz ]
          then
               wget https://www.playonlinux.com/wine/binaries/phoenicis/upstream-linux-$ARCH/PlayOnLinux-wine-$VERSION-upstream-linux-$ARCH.tar.gz -P $cachedir
          fi
	  mkdir ~/wine-$VERSION-$ARCH
	  if file $cachedir/PlayOnLinux-wine-$VERSION-upstream-linux-$ARCH.tar.gz | grep -q gzip
          then
               tar -xzf $cachedir/PlayOnLinux-wine-$VERSION-upstream-linux-$ARCH.tar.gz -C ~/wine-$VERSION-$ARCH
          else
               tar -xf $cachedir/PlayOnLinux-wine-$VERSION-upstream-linux-$ARCH.tar.gz -C ~/wine-$VERSION-$ARCH
          fi
     fi 
fi

mkdir -p ~/.config
touch ~/.config/wine64conf
touch ~/.config/wineconf

case $ARCH in
amd64)
      if [ "$REALARCH" == "uni" ]
      then
           [[ -z $(awk 'FNR==1' ~/.config/wine64conf) ]] && echo "" > ~/.config/wine64conf
           [[ -z $(awk 'FNR==1' ~/.config/wineconf) ]] && echo "" > ~/.config/wineconf
           [[ -z $(awk 'FNR==2' ~/.config/wineconf) ]] && echo "" >> ~/.config/wineconf
           sed -i "1s/^.*$/$VERSION/"  ~/.config/wine64conf
           sed -i "1s/^.*$/$VERSION/"   ~/.config/wineconf
           sed -i "2s/^.*$/$ARCH/"     ~/.config/wineconf
      else
           [[ -z $(awk 'FNR==1' ~/.config/wine64conf) ]] && echo "" > ~/.config/wine64conf
           sed -i "1s/^.*$/$VERSION/"  ~/.config/wine64conf
      fi
      if [ ! -d ~/.local/wineprefix64/wine-$VERSION ] && [ "$REALARCH" != "uni" ]
      then 
           wine64 -winedbg winecfg
      elif [ ! -d ~/.local/wineprefix/wine-$VERSION ] && [ "$REALARCH" == "uni" ]
      then
           WINEARCH=win32 wine -winedbg winecfg
      fi
      ;;
x86)
      [[ -z $(awk 'FNR==1' ~/.config/wineconf) ]] && echo "" > ~/.config/wineconf
      [[ -z $(awk 'FNR==2' ~/.config/wineconf) ]] && echo "" >> ~/.config/wineconf
      sed -i "1s/^.*$/$VERSION/" ~/.config/wineconf
      sed -i "2s/^.*$/$ARCH/"  ~/.config/wineconf
      if [ ! -d ~/.local/wineprefix/wine-$VERSION ];then wine -winedbg winecfg;fi
      ;;
esac

pfxupdate
