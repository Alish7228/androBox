#!/bin/bash  

configfile=/sdcard/androBox/proot.conf
rootfspath=$PREFIX/var/lib/androBox/ubuntu


set_fake_proc(){

mkdir -p $rootfspath/proc
chmod 700 $rootfspath/proc

if [ ! -f "$rootfspath/proc/.loadavg" ]
then
     cat <<- EOF > "$rootfspath/proc/.loadavg"
     0.54 0.41 0.30 1/931 370386
     EOF
fi

if [ ! -f "$rootfspath/proc/.stat" ]
then
     cat <<- EOF > "$rootfspath/proc/.stat"
     cpu  1050008 127632 898432 43828767 37203 63 99244 0 0 0
     cpu0 212383 20476 204704 8389202 7253 42 12597 0 0 0
     cpu1 224452 24947 215570 8372502 8135 4 42768 0 0 0
     cpu2 222993 17440 200925 8424262 8069 9 17732 0 0 0
     cpu3 186835 8775 195974 8486330 5746 3 8360 0 0 0
     cpu4 107075 32886 48854 8688521 3995 4 5758 0 0 0
     cpu5 90733 20914 27798 1429573 2984 1 11419 0 0 0
     intr 53261351 0 686 1 0 0 1 12 31 1 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7818 0 0 0 0 0 0 0 0 255 33 1912 33 0 0 0 0 0 0 3449534 2315885 2150546 2399277 696281 339300 22642 19371 0 0 0 0 0 0 0 0 0 0 0 2199 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2445 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 162240 14293 2858 0 151709 151592 0 0 0 284534 0 0 0 0 0 0 0 0 0 0 0 0 0 0 185353 0 0 938962 0 0 0 0 736100 0 0 1 1209 27960 0 0 0 0 0 0 0 0 303 115968 452839 2 0 0 0 0 0 0 0 0 0 0 0 0 0 160361 8835 86413 1292 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3592 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6091 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35667 0 0 156823 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 138 2667417 0 41 4008 952 16633 533480 0 0 0 0 0 0 262506 0 0 0 0 0 0 126 0 0 1558488 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 8 0 0 6 0 0 0 10 3 4 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 1 1 83806 0 1 1 0 1 0 1 1 319686 2 8 0 0 0 0 0 0 0 0 0 244534 0 1 10 9 0 10 112 107 40 221 0 0 0 144
     ctxt 90182396
     btime 1595203295
     processes 270853
     procs_running 2
     procs_blocked 0
     softirq 25293348 2883 7658936 40779 539155 497187 2864 1908702 7229194 279723 7133925
     EOF
fi

if [ ! -f "$rootfspath/proc/.uptime" ]
then
     cat <<- EOF > "$rootfspath/proc/.uptime"
     284684.56 513853.46
     EOF
fi

if [ ! -f "$rootfspath/proc/.version" ]
then
     cat <<- EOF > "$rootfspath/proc/.version"
     Linux version 5.4.0-faked (termux@androidos) (gcc version 4.9.x (Faked /proc/version by Proot-Distro) ) #1 SMP PREEMPT Fri Jul 10 00:00:00 UTC 2020
     EOF
fi

if [ ! -f "$rootfspath/proc/.vmstat" ]
then
     cat <<- EOF > "$rootfspath/proc/.vmstat"
		nr_free_pages 146031
		nr_zone_inactive_anon 196744
		nr_zone_active_anon 301503
		nr_zone_inactive_file 2457066
		nr_zone_active_file 729742
		nr_zone_unevictable 164
		nr_zone_write_pending 8
		nr_mlock 34
		nr_page_table_pages 6925
		nr_kernel_stack 13216
		nr_bounce 0
		nr_zspages 0
		nr_free_cma 0
		numa_hit 672391199
		numa_miss 0
		numa_foreign 0
		numa_interleave 62816
		numa_local 672391199
		numa_other 0
		nr_inactive_anon 196744
		nr_active_anon 301503
		nr_inactive_file 2457066
		nr_active_file 729742
		nr_unevictable 164
		nr_slab_reclaimable 132891
		nr_slab_unreclaimable 38582
		nr_isolated_anon 0
		nr_isolated_file 0
		workingset_nodes 25623
		workingset_refault 46689297
		workingset_activate 4043141
		workingset_restore 413848
		workingset_nodereclaim 35082
		nr_anon_pages 599893
		nr_mapped 136339
		nr_file_pages 3086333
		nr_dirty 8
		nr_writeback 0
		nr_writeback_temp 0
		nr_shmem 13743
		nr_shmem_hugepages 0
		nr_shmem_pmdmapped 0
		nr_file_hugepages 0
		nr_file_pmdmapped 0
		nr_anon_transparent_hugepages 57
		nr_unstable 0
		nr_vmscan_write 57250
		nr_vmscan_immediate_reclaim 2673
		nr_dirtied 79585373
		nr_written 72662315
		nr_kernel_misc_reclaimable 0
		nr_dirty_threshold 657954
		nr_dirty_background_threshold 328575
		pgpgin 372097889
		pgpgout 296950969
		pswpin 14675
		pswpout 59294
		pgalloc_dma 4
		pgalloc_dma32 101793210
		pgalloc_normal 614157703
		pgalloc_movable 0
		allocstall_dma 0
		allocstall_dma32 0
		allocstall_normal 184
		allocstall_movable 239
		pgskip_dma 0
		pgskip_dma32 0
		pgskip_normal 0
		pgskip_movable 0
		pgfree 716918803
		pgactivate 68768195
		pgdeactivate 7278211
		pglazyfree 1398441
		pgfault 491284262
		pgmajfault 86567
		pglazyfreed 1000581
		pgrefill 7551461
		pgsteal_kswapd 130545619
		pgsteal_direct 205772
		pgscan_kswapd 131219641
		pgscan_direct 207173
		pgscan_direct_throttle 0
		zone_reclaim_failed 0
		pginodesteal 8055
		slabs_scanned 9977903
		kswapd_inodesteal 13337022
		kswapd_low_wmark_hit_quickly 33796
		kswapd_high_wmark_hit_quickly 3948
		pageoutrun 43580
		pgrotated 200299
		drop_pagecache 0
		drop_slab 0
		oom_kill 0
		numa_pte_updates 0
		numa_huge_pte_updates 0
		numa_hint_faults 0
		numa_hint_faults_local 0
		numa_pages_migrated 0
		pgmigrate_success 768502
		pgmigrate_fail 1670
		compact_migrate_scanned 1288646
		compact_free_scanned 44388226
		compact_isolated 1575815
		compact_stall 863
		compact_fail 392
		compact_success 471
		compact_daemon_wake 975
		compact_daemon_migrate_scanned 613634
		compact_daemon_free_scanned 26884944
		htlb_buddy_alloc_success 0
		htlb_buddy_alloc_fail 0
		unevictable_pgs_culled 258910
		unevictable_pgs_scanned 3690
		unevictable_pgs_rescued 200643
		unevictable_pgs_mlocked 199204
		unevictable_pgs_munlocked 199164
		unevictable_pgs_cleared 6
		unevictable_pgs_stranded 6
		thp_fault_alloc 10655
		thp_fault_fallback 130
		thp_collapse_alloc 655
		thp_collapse_alloc_failed 50
		thp_file_alloc 0
		thp_file_mapped 0
		thp_split_page 612
		thp_split_page_failed 0
		thp_deferred_split_page 11238
		thp_split_pmd 632
		thp_split_pud 0
		thp_zero_page_alloc 2
		thp_zero_page_alloc_failed 0
		thp_swpout 4
		thp_swpout_fallback 0
		balloon_inflate 0
		balloon_deflate 0
		balloon_migrate 0
		swap_ra 9661
		swap_ra_hit 7872
		EOF
fi


}

loadconfs(){

wget -q https://raw.githubusercontent.com/Pipetto-crypto/androBox/master/configs/configs.tar -P ~
mkdir -p ~/tmpdir && tar -xvf ~/configs.tar -C ~/tmpdir
for config in ~/tmpdir/*
do
   filename=$(basename $config)
   [[ ! -f /sdcard/androBox/$filename ]] && mv ~/tmpdir/$filename /sdcard/androBox
done

rm -rf ~/tmpdir

}

mkdir -p /sdcard/androBox
mkdir -p /sdcard/androBox/wine
mkdir -p /sdcard/androBox/proton
mkdir -p /sdcard/androBox/box_logs
if [ "$1" == "update" ] || [ "$1" == "update-all" ]
then
   loadconfs
fi

if [ ! -f $PATH/termux-x11 ]
then
     echo -e "You haven't installed Termux:X11 deb but it is required by this script, leaving..."
     exit
fi


iswinedesktop="$(cat $configfile | awk -F '=' '/winedesktop/{print $2}' | tr -d "\n")" 
gpurenderer="$(cat $configfile | awk -F '=' '/renderer/{print $2}' | tr -d "\n")"
case $gpurenderer in
llvmpipe)
          rendererargs=""
          ;;
zink)
          rendererargs="export GALLIUM_DRIVER=zink
          export MESA_LOADER_DRIVER_OVERRIDE=zink"
          ;;
virgl)
          rendererargs="export GALLIUM_DRIVER=virpipe
          export LIBGL_ALWAYS_SOFTWARE=1"
          ;;
*)
          echo -e "\nThis is not a valid renderer, change your config file appropriately. Defaulting to llvmpipe"
          rendererargs=""
          ;;
esac

thispid=$$
index=1
for var in "$@"
do
        argslist[$index]=$var
        index=$((index+1))
done

help(){

echo -e "Usage: ubuntu [options] [commands]"
echo -e "\nOptions: "
echo -e "-x             Start the proot with Termux:X11 connection"
echo -e "-vnc           Start the proot with VNC connection"
echo -e "-c             Set core affinity, default to high performance cores"
echo -e "-va            Start virglrenderer android vtest server, can provide --use-gles to start use GL4ES."
echo -e "update         Update this script"
echo -e "update-all     Update this script and all the scripts inside the proot"
echo -e "help           Print this help message"
echo -e "enter          Enter the proot for maintainance and troubleshooting"
echo -e "set-renderer   Set default renderer, default llvmpipe"
echo -e "stop           Kill all running processes"

}


get_index_if_match(){

for i in $1
do
        position=1
        hasfound=false
        for e in $2
        do
                if [ "$i" == "$e" ]
                then
      			hasfound=true
                        break 2
                fi
        position=$((position+1))
        done
done
if [ "$hasfound" == "true" ];then echo $position;fi

}

exit_proot(){

pkill -P $thispid
kill_processes
exit 0

}


kill_processes(){

pkill pulseaudio
kill $(pidof app_process) >/dev/null 2>&1
kill $(pidof virgl_test_server_android) >/dev/null 2>&1

}


xserver(){

echo -e "\nStarting the X server"
DISPLAY=:0 termux-x11 >/dev/null 2>&1 &
sleep 3


}

virgl_server(){

echo -e "\nStarting virgl vtest server"
hasgles=$(get_index_if_match "--use-gles" "${argslist[*]}")
if [ "$hasgles" != "" ]; then VIRGL_ARGS="--use-gles";fi
MESA_NO_ERROR=1 virgl_test_server_android $VIRGL_ARGS &

}

set_renderer(){

rendererin=coresin=$(get_index_if_match "set-renderer" "${argslist[*]}")
sed -i "4s/=.*/=$ {argslist[$((rendererin+1))]}/g" $configfile


}

pulse_server(){

echo -e "\nStarting the PulseAudio server"
pulseaudio --start --exit-idle-time=-1
pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1

}

temp_login_script(){

cat <<- EOF > "$rootfspath/etc/profile.d/globalvars.sh"
	#!/bin/bash	
	export BOX86_BASH=~/box_bash/bash_x86
	export BOX64_BASH=~/box_bash/bash_x64
	export DISPLAY=:0
	export DXVK_LOG_LEVEL=none
	EOF
echo "#!/bin/bash" > $rootfspath/etc/profile.d/tempvars.sh
echo -e "$rendererargs"  >> $rootfspath/etc/profile.d/tempvars.sh
chmod +x $rootfspath/etc/profile.d/tempvars.sh

}

proot_login(){

unset LD_PRELOAD
set_fake_proc
bindargs=(
"-b /sdcard:/sdcard" 
"-b /data/data/com.termux/files/home:/termux-home" 
"-b /storage/emulated/0" 
"-b $TMPDIR:/tmp" 
"-b /proc" 
"-b /proc/self/fd:/dev/fd" 
"-b /proc/self/fd/0:/dev/stdin" 
"-b /proc/self/fd/1:/dev/stdout" 
"-b /proc/self/fd/2:/dev/stderr" 
"-b /dev/urandom:/dev/random" 
"-b $rootfspath/proc/.loadavg:/proc/loadavg" 
"-b $rootfspath/proc/.uptime:/proc/uptime" 
"-b $rootfspath/proc/.stat:/proc/stat" 
"-b $rootfspath/proc/.version:/proc/version" 
"-b $rootfspath/proc/.vmstat:/proc/vmstat")
proot_args=(
"--link2symlink" 
"--ashmem-memfd" 
"--kernel-release=5.4.0-faked"
)

export PATH=$PATH:/usr/bin:/usr/local/bin:/bin:/usr/sbin:/usr/local/sbin:/sbin
export HOME=/root
source $rootfspath/etc/profile.d/tempvars.sh
source $rootfspath/etc/profile.d/globalvars.sh
proot -w / -S $rootfspath ${bindargs[@]} ${proot_args[@]} $@

}


update(){

rm -rf ~/ubuntu
wget -q https://raw.githubusercontent.com/Pipetto-crypto/androBox/master/androBox -P ~
mv ~/androBox $PREFIX/bin
chmod +x $PREFIX/bin/androBox

}

update-proot(){

proot_login /usr/bin/apt update
proot_login /usr/bin/apt upgrade
wget -q https://raw.githubusercontent.com/Pipetto-crypto/androBox/master/scripts/update-bins -P $rootfspath/usr/bin
proot_login /usr/bin/update-bins

}

update-all(){

update
update-proot

}

coresin=$(get_index_if_match "-cores" "${argslist[*]}")
if [ "$coresin" == "" ];then cores="4-7";else cores=${argslist[$((coresin+1))]};fi
taskset -a -pc $cores $thispid >/dev/null 2>&1


commindex=1

for i in ${argslist[@]}
do
     case "$i" in
     help)
          help
          exit
          ;;
     update)
          update
          exit
          ;;
     update-all)
          update-all
          exit
          ;;
     update-proot)
          update-proot
          exit
          ;;
     set-renderer)
          set_renderer
          exit_proot
          ;;
     stop)
          kill_processes
          exit 0
          ;;
     terminal)
          commslist="/bin/login -f root"
          ;;
     *)
          if [ -f "$i" ]
          then
                absfile=$(realpath -e $i)
          else
                commslist[$commindex]=$i
          fi
          commindex=$((commindex+1))
          ;;
      esac
done

#Update the pids after parsing command line options

app_pid=$(pidof app_process)
virgl_pid=$(pidof virgl_test_server)
pulse_pid=$(pidof pulseaudio)

if [ "$app_pid" == "" ];then xserver;fi
if [ "$virgl_pid" == "" ];then virgl_server;fi
if [ "$pulse_pid" == "" ];then pulse_server;fi


if [ "${commslist[*]}" != "" ]
then
    iswinedesktop="no"
else
    commslist=("/usr/bin/winedesktop")
fi

temp_login_script
proot_login ${commslist[*]} "$absfile"
reset -I -Q
